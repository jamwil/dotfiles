set breakindent
set cursorline
set formatoptions=l
set lbr
set mouse=a
set nofoldenable
set nowrap
set number
set showcmd
set showmatch
set shiftwidth=4
set tabstop=4
set expandtab
set updatetime=1000

nnoremap j gj
nnoremap k gk
nnoremap <C-s-tab> :tabprevious<CR>
nnoremap <C-tab> :tabnext<CR>

colorscheme nord

" auto-reload
set autoread

" Triger `autoread` when files changes on disk
" https://unix.stackexchange.com/questions/149209/refresh-changed-content-of-file-opened-in-vim/383044#383044
" https://vi.stackexchange.com/questions/13692/prevent-focusgained-autocmd-running-in-command-line-editing-mode
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI *
  \ if mode() !~ '\v(c|r.?|!|t)' && getcmdwintype() == '' | checktime | endif

" Notification after file change
" https://vi.stackexchange.com/questions/13091/autocmd-event-for-autoread
autocmd FileChangedShellPost *
  \ echohl WarningMsg | echo "File changed on disk. Buffer reloaded." | echohl None

" python
source ~/.vim/.python-vimrc
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h set textwidth=88
set encoding=utf-8
let python_highlight_all=1
syntax on
filetype indent on
set autoindent
set foldmethod=indent

" text files
au FileType text set wrap
au FileType text set linebreak
au BufRead,BufNewFile *.md setlocal wrap
au BufRead,BufNewFile *.md setlocal linebreak
autocmd BufEnter * if &filetype == "" | setlocal ft=text | endif

" Add bracket completions
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h inoremap ( ()<left>
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h inoremap [ []<left>
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h inoremap { {}<left>
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h inoremap <expr> ) strpart(getline('.'), col('.')-1, 1) == ")" ? "\<Right>" : ")"
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h inoremap <expr> ] strpart(getline('.'), col('.')-1, 1) == "]" ? "\<Right>" : "]"
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h inoremap <expr> } strpart(getline('.'), col('.')-1, 1) == "}" ? "\<Right>" : "}"

" Set the GUI font
set guifont=Monaco:h12

